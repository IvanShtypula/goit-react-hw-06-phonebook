{"version":3,"sources":["App.module.css","components/ListItem/ListItem.module.css","reverseTransition.module.css","components/Filter/Filter.module.css","redux/actions/formAction.js","components/ContactForm/ContactForm.js","redux/actions/filterAction.js","components/Filter/Filter.js","components/ListItem/ListItem.js","components/ContactList/ContactList.js","redux/actions/storageAction.js","App.js","redux/reducers/formReducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","uuid","removeContact","ContactForm","formInitialState","sameName","state","handleInput","target","value","setState","handleSubmit","event","preventDefault","contacts","props","items","some","contact","setTimeout","timeOutAlert","onAddContact","this","className","formStyle","autoComplete","onSubmit","CSSTransition","classNames","in","timeout","unmountOnExit","alertModal","htmlFor","type","placeholder","onChange","Component","mapDispatchToProps","connect","contactsFilter","contactsFilterChange","filter","styleFilter","filterWrap","filterTitle","ownId","item","find","dispatch","onRemoveContact","styleList","onClick","lcFilter","toLowerCase","includes","TransitionGroup","component","styleApp","contactsList","length","map","key","titleStyle","itemsStorage","App","showTitle","lastContacts","localStorage","getItem","console","log","JSON","parse","prevState","setItem","stringify","container","title","createReducer","_","combineReducers","store","configureStore","reducer","formReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9bcc1267.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__XY2bQ\",\"title\":\"App_title__2Coxl\",\"contactsList\":\"App_contactsList__V1ZWm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list_item\":\"ListItem_list_item__AojAr\",\"list_item-name\":\"ListItem_list_item-name__3aHUB\",\"list_item-number\":\"ListItem_list_item-number__n0ZrG\",\"list_item-button\":\"ListItem_list_item-button__28O2A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enterActive\":\"reverseTransition_enterActive__3uNuq\",\"task\":\"reverseTransition_task__33AUy\",\"exitActive\":\"reverseTransition_exitActive__26jDA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter_input\":\"Filter_filter_input__KMxzs\",\"filterTitle\":\"Filter_filterTitle__xFVhn\"};","import { uuid } from \"uuidv4\";\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\n// import { ADD_CONTACT, REMOVE_CONTACT } from \"../constants/formConstants\";\r\n\r\nexport const addContact = createAction(\"@contacts/add\", (name, number) => ({\r\n  payload: {\r\n    id: uuid(),\r\n    name: name,\r\n    number: number,\r\n  },\r\n}));\r\n\r\nexport const removeContact = createAction(\"@contacts/remove\");\r\n\r\n// export const addContact = (name, number) => ({\r\n//   type: ADD_CONTACT,\r\n//   payload: {\r\n//     id: uuid(),\r\n//     name: name,\r\n//     number: number,\r\n//   },\r\n// });\r\n\r\n// export const removeContact = (id) => ({\r\n//   type: REMOVE_CONTACT,\r\n//   payload: id,\r\n// });\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { addContact } from \"../../redux/actions/formAction\";\r\nimport formStyle from \"./ContactForm.module.css\";\r\nimport \"./ContactForm.css\";\r\n\r\nclass ContactForm extends Component {\r\n  formInitialState = {\r\n    name: \"\",\r\n    number: \"\",\r\n    sameName: false,\r\n  };\r\n\r\n  state = {\r\n    ...this.formInitialState,\r\n  };\r\n\r\n  handleInput = ({ target }) => {\r\n    const { name, value } = target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const contacts = this.props.items;\r\n    const value = event.target.name.value;\r\n\r\n    if (contacts.some((contact) => contact.name === value)) {\r\n      this.setState({\r\n        name: \"\",\r\n        number: \"\",\r\n        sameName: true,\r\n      });\r\n      setTimeout(this.timeOutAlert, 1500);\r\n      return;\r\n    }\r\n\r\n    const name = this.state.name;\r\n    const number = this.state.number;\r\n    this.props.onAddContact(name, number);\r\n\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n\r\n  timeOutAlert = () => {\r\n    this.setState({\r\n      sameName: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number, sameName } = this.state;\r\n\r\n    return (\r\n      <form\r\n        className={formStyle[\"contactForm\"]}\r\n        autoComplete=\"off\"\r\n        onSubmit={this.handleSubmit}\r\n      >\r\n        <CSSTransition\r\n          classNames=\"alertWindow\"\r\n          in={sameName}\r\n          timeout={1000}\r\n          unmountOnExit\r\n        >\r\n          <div className={formStyle.alertModal}>Contact already exist!</div>\r\n        </CSSTransition>\r\n\r\n        <label htmlFor=\"name\" className={formStyle[\"contactForm__label\"]}>\r\n          Name\r\n        </label>\r\n        <input\r\n          className={formStyle[\"contactForm__input\"]}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          id=\"name\"\r\n          placeholder=\"   Enter your name\"\r\n          value={name}\r\n          onChange={this.handleInput}\r\n        />\r\n        <label htmlFor=\"number\" className={formStyle[\"contactForm__label\"]}>\r\n          Number\r\n        </label>\r\n        <input\r\n          className={formStyle[\"contactForm__input\"]}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          id=\"Number\"\r\n          placeholder=\"   Enter your number\"\r\n          value={number}\r\n          onChange={this.handleInput}\r\n        />\r\n\r\n        <button className={formStyle[\"contactForm__submit\"]} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    items: state.contacts.items,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  onAddContact: addContact,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n// import { FILTER_CONTACT } from \"../constants/formConstants\";\r\n\r\nexport const contactsFilter = createAction(\"@contacts/filter\");\r\n\r\n// export const contactsFilter = (filter) => ({\r\n//   type: FILTER_CONTACT,\r\n//   payload: filter,\r\n// });\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { contactsFilter } from \"../../redux/actions/filterAction\";\r\nimport styleFilter from \"./Filter.module.css\";\r\n\r\nconst Filter = ({ value, contactsFilterChange }) => {\r\n  return (\r\n    <div className={styleFilter.filterWrap}>\r\n      <h3 className={styleFilter.filterTitle}>Find by name</h3>\r\n      <input\r\n        type=\"text\"\r\n        className={styleFilter[\"filter_input\"]}\r\n        value={value}\r\n        onChange={(event) => contactsFilterChange(event.target.value)}\r\n      ></input>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { value: state.contacts.filter };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  contactsFilterChange: contactsFilter,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { removeContact } from \"../../redux/actions/formAction\";\r\nimport styleList from \"./ListItem.module.css\";\r\n\r\nconst ListItem = ({ onRemoveContact, name, number }) => {\r\n  return (\r\n    <li className={styleList[\"list_item\"]}>\r\n      <p className={styleList[\"list_item-name\"]}>{name}: </p>\r\n      <p className={styleList[\"list_item-number\"]}> {number}</p>\r\n      <button\r\n        onClick={onRemoveContact}\r\n        className={styleList[\"list_item-button\"]}\r\n      >\r\n        &times;\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state, ownId) => {\r\n  const item = state.contacts.items.find((item) => item.id === ownId.id);\r\n  return { ...item };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownId) => ({\r\n  onRemoveContact: () => dispatch(removeContact(ownId.id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListItem);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport styleApp from \"../../App.module.css\";\r\nimport titleStyle from \"../../reverseTransition.module.css\";\r\nimport ListItem from \"../ListItem/ListItem\";\r\n\r\nconst ContactList = ({items}) => { \r\n    return (\r\n      <TransitionGroup component=\"ul\" className={styleApp.contactsList}>\r\n        {items.length > 0 &&\r\n          items.map(({id}) => (\r\n            <CSSTransition key={id} classNames={titleStyle} timeout={250}>\r\n              <ListItem id={id}/>          \r\n            </CSSTransition>\r\n          ))}\r\n      </TransitionGroup>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { items, filter } = state.contacts;\r\n  const lcFilter = filter.toLowerCase();\r\n  return {\r\n    items: items.filter((item) => item.name.toLowerCase().includes(lcFilter)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ContactList);\r\n","import {createAction} from \"@reduxjs/toolkit\"\r\n\r\nexport const itemsStorage = createAction(\"@localStorage/getItems\")","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { CSSTransition } from \"react-transition-group\";\nimport ContactForm from \"./components/ContactForm/ContactForm.js\";\nimport Filter from \"./components/Filter/Filter.js\";\nimport ContactList from \"./components/ContactList/ContactList.js\";\nimport { contactsFilter } from \"./redux/actions/filterAction\";\nimport { itemsStorage } from \"./redux/actions/storageAction\";\nimport styleApp from \"./App.module.css\";\nimport titleStyle from \"./reverseTransition.module.css\";\n\nclass App extends Component {\n  state = {\n    showTitle: false,\n  };\n\n  componentDidMount() {\n    const lastContacts = localStorage.getItem(\"items\");\n    console.log(lastContacts);\n    if (lastContacts) {\n      this.props.itemsStorage(JSON.parse(lastContacts));\n    }\n    this.setState({\n      showTitle: true,\n    });\n  }\n\n  componentDidUpdate(prevState) {\n    // console.log(prevState)\n    if (prevState.items !== this.props.items) {\n      localStorage.setItem(\"items\", JSON.stringify(this.props.items));\n    }\n  }\n\n  render() {\n    const { showTitle } = this.state;\n    return (\n      <div className={styleApp.container}>\n        <CSSTransition classNames={titleStyle} in={showTitle} timeout={250}>\n          <h1 className={styleApp.title}>Phonebook</h1>\n        </CSSTransition>\n        <ContactForm contacts={this.props.items} />\n\n        {this.props.items.length > 1 && <Filter />}\n\n        <h2>Contacts</h2>\n\n        <ContactList />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    items: state.contacts.items,\n  };\n};\n\nconst mapDispatchToProps = {\n  contactsFilter,\n  itemsStorage,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport { addContact, removeContact } from \"../actions/formAction\";\r\nimport { contactsFilter } from \"../actions/filterAction\";\r\nimport { itemsStorage } from \"../actions/storageAction\";\r\n// import {\r\n//   ADD_CONTACT,\r\n//   REMOVE_CONTACT,\r\n//   FILTER_CONTACT,\r\n// } from \"../constants/formConstants\";\r\n\r\nconst addItem = (state, {payload}) => {\r\n  return [...state, payload];\r\n};\r\nconst removeItem = (state, {payload}) => {\r\n  return state.filter((item) => item.id !== payload);\r\n};\r\n\r\nconst items = createReducer([], {\r\n  [addContact]: addItem,\r\n  [removeContact]: removeItem,\r\n  [itemsStorage]: (_, {payload}) => payload\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [contactsFilter]: (_, {payload}) => payload,\r\n});\r\n\r\n// const items = (state = [], { type, payload }) => {\r\n//   switch (type) {\r\n//     case addContact.type:\r\n//       return [...state, payload];\r\n//     case removeContact.type:\r\n//       return state.filter((item) => item.id !== payload);\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// const filter = (state = \"\", { type, payload }) => {\r\n//   switch (type) {\r\n//     case contactsFilter.type:\r\n//       return payload;\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","// import { combineReducers } from \"redux\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport formReducer from \"../redux/reducers/formReducer\";\r\n\r\n// const rootReducer = combineReducers({\r\n//   contacts: formReducer,\r\n// });\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: formReducer,\r\n  },\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {Provider} from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>  \n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__wjA3L\",\"contactForm__label\":\"ContactForm_contactForm__label__3fNT8\",\"contactForm__input\":\"ContactForm_contactForm__input__wkgbn\",\"contactForm__submit\":\"ContactForm_contactForm__submit__13uSi\",\"alertModal\":\"ContactForm_alertModal__3bjj4\"};"],"sourceRoot":""}